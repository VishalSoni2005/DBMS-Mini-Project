-- SC4: Online Marketplace SQL Script

-- Creating Tables and Inserting Data

CREATE TABLE Categories (
    category_ID INT PRIMARY KEY,
    category_name VARCHAR(255) NOT NULL
);

INSERT INTO Categories (category_ID, category_name) VALUES
(1, 'Refrigerators'),
(2, 'Washing Machines'),
(3, 'Dishwashers'),
(4, 'Ovens'),
(5, 'Cooktops');

CREATE TABLE Products (
    product_ID INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    category_ID INT,
    FOREIGN KEY (category_ID) REFERENCES Categories(category_ID)
);

INSERT INTO Products (product_ID, name, description, price, category_ID) VALUES
(101, 'Refrigerator A1', 'Large capacity, stainless steel', 1200.00, 1),
(102, 'Washing Machine B2', 'Front load, high efficiency', 800.00, 2),
(103, 'Dishwasher C3', 'Built-in, quiet operation', 600.00, 3),
(104, 'Oven D4', 'Convection, digital control', 900.00, 4),
(105, 'Cooktop E5', 'Gas, 5 burners', 500.00, 5),
(106, 'Refrigerator A2', 'Medium capacity, white', 950.00, 1),
(107, 'Washing Machine B3', 'Top load, standard efficiency', 650.00, 2);

CREATE TABLE Warehouses (
    warehouse_ID INT PRIMARY KEY,
    warehouse_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

INSERT INTO Warehouses (warehouse_ID, warehouse_name, address) VALUES
(1, 'Warehouse Alpha', '123 Main St, Anytown'),
(2, 'Warehouse Beta', '456 Oak Ave, Somecity'),
(3, 'Warehouse Gamma', '789 Pine Ln, Othertown');

CREATE TABLE Inventory (
    inventory_ID INT PRIMARY KEY,
    product_ID INT,
    warehouse_ID INT,
    quantity_in_stock INT NOT NULL,
    last_stock_update TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (product_ID) REFERENCES Products(product_ID),
    FOREIGN KEY (warehouse_ID) REFERENCES Warehouses(warehouse_ID)
);

INSERT INTO Inventory (inventory_ID, product_ID, warehouse_ID, quantity_in_stock) VALUES
(1, 101, 1, 50),
(2, 102, 1, 30),
(3, 103, 2, 20),
(4, 104, 2, 40),
(5, 105, 3, 15),
(6, 101, 2, 10),
(7, 106, 1, 25),
(8, 107, 3, 18);

CREATE TABLE Orders (
    order_ID INT PRIMARY KEY,
    customer_ID INT NOT NULL,
    order_date DATE NOT NULL,
    shipping_address VARCHAR(255) NOT NULL,
    order_status VARCHAR(50) NOT NULL
);

INSERT INTO Orders (order_ID, customer_ID, order_date, shipping_address, order_status) VALUES
(1001, 201, '2023-01-15', '789 Pine Ln, Othertown', 'Shipped'),
(1002, 202, '2023-02-20', '456 Oak Ave, Somecity', 'Delivered'),
(1003, 201, '2023-03-10', '789 Pine Ln, Othertown', 'Processing'),
(1004, 203, '2023-04-05', '321 Elm St, Anytown', 'Pending'),
(1005, 202, '2023-05-12', '456 Oak Ave, Somecity', 'Shipped');

CREATE TABLE OrderItems (
    order_item_ID INT PRIMARY KEY,
    order_ID INT,
    product_ID INT,
    quantity_ordered INT NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (order_ID) REFERENCES Orders(order_ID),
    FOREIGN KEY (product_ID) REFERENCES Products(product_ID)
);

INSERT INTO OrderItems (order_item_ID, order_ID, product_ID, quantity_ordered, unit_price) VALUES
(1, 1001, 101, 2, 1200.00),
(2, 1001, 103, 1, 600.00),
(3, 1002, 102, 1, 800.00),
(4, 1003, 104, 3, 900.00),
(5, 1004, 105, 1, 500.00),
(6, 1005, 102, 2, 800.00),
(7, 1005, 107, 1, 650.00);

CREATE TABLE Shipments (
    shipment_ID INT PRIMARY KEY,
    order_ID INT,
    shipping_carrier VARCHAR(255),
    tracking_number VARCHAR(255),
    shipment_date DATE,
    FOREIGN KEY (order_ID) REFERENCES Orders(order_ID)
);

INSERT INTO Shipments (shipment_ID, order_ID, shipping_carrier, tracking_number, shipment_date) VALUES
(1, 1001, 'FedEx', '1234567890', '2023-01-18'),
(2, 1002, 'UPS', '0987654321', '2023-02-22'),
(3, 1005, 'DHL', '5678901234', '2023-05-14'),
(4, 1004, 'FedEx', '1234567893', '2023-01-22');


